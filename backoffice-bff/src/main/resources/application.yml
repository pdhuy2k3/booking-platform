
server:
  port: 8080
spring:
  profiles:
    active: local
  application:
    name: BACKOFFICE-BFF


---
spring:
  config:
    activate:
      on-profile: local
  security:
    oauth2:
      client:
        registration:
          api-client:
            client-id: backoffice-bff
            client-secret: qhW4NC8pgPLdJDTd57sry5ON1fHK1d8i
            scope: profile, email, openid, roles
            provider: keycloak
        provider:
          keycloak:
            issuer-uri: http://localhost:9090/realms/BookingSmart
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    consumer:
      group-id: backoffice-bff-group

  cloud:
    gateway:
      routes:
        - id: api
          uri: http://api.bookingsmart.local
          predicates:
            - Path=/api/**
          filters:
            - RewritePath=/api/(?<segment>.*), /$\{segment}
            - TokenRelay=
        # Administrative routes
        - id: eureka-web-start
          uri: lb://DISCOVERY-SERVICE
          predicates:
            - Path=/eureka/web
          filters:
            - StripPrefix=2
        
        # Default frontend route (lowest priority)
        - id: frontend-fallback
          uri: http://localhost:3001
          predicates:
            - Path=/**
      default-filters:
        - SaveSession
eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka
  instance:
    hostname: localhost
    prefer-ip-address: false

---

spring:
  config:
    activate:
      on-profile: "docker"
  security:
    oauth2:
      client:
        registration:
          api-client:
            client-name: Backoffice
            client-id: backoffice-bff
            client-secret: ${KEYCLOAK_CLIENT_SECRET_BACKOFFICE_BFF}
            scope: profile, email, openid, roles
            provider: keycloak
        provider:
          keycloak:
            issuer-uri: ${JWT_ISSUER_URI}
  cloud:
    gateway:
      default-filters:
        - SaveSession
      routes:
        - id: api
          uri: ${API_URL:https://api-bookingsmart.huypd.dev}
          predicates:
            - Path=/api/**
          filters:
            - DedupeResponseHeader=Origin Access-Control-Request-Method Access-Control-Request-Headers
            - TokenRelay=
            - StripPrefix=1
        - id: nextjs
          uri: http://backoffice-fe:3001
          predicates:
            - Path=/**
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    consumer:
      group-id: backoffice-bff-group
eureka:
  client:
    serviceUrl:
      defaultZone: ${EUREKA_URI}
  instance:
    prefer-ip-address: true