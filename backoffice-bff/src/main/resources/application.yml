
server:
  port: 8080
spring:
  profiles:
    active: local
  application:
    name: BACKOFFICE-BFF


---
spring:
  config:
    activate:
      on-profile: local
  security:
    oauth2:
      client:
        registration:
          api-client:
            client-id: backoffice-bff
            client-secret: qhW4NC8pgPLdJDTd57sry5ON1fHK1d8i
            scope: profile, email, openid, roles
            provider: keycloak
        provider:
          keycloak:
            issuer-uri: http://localhost:9090/realms/BookingSmart
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    consumer:
      group-id: backoffice-bff-group

  cloud:
    gateway:
      routes:
        # FLIGHT SERVICE
        - id: flight-service
          uri: lb://FLIGHT-SERVICE
          predicates:
            - Path=/api/flight-service/**
          filters:
            - TokenRelay=
            - RewritePath=/api/flight-service/(?<segment>.*), /${segment}
        # BOOKING SERVICE
        - id: booking-service
          uri: lb://BOOKING-SERVICE
          predicates:
            - Path=/api/booking-service/**
          filters:
            - TokenRelay=
            - RewritePath=/api/booking-service/(?<segment>.*), /${segment}
        # HOTEL SERVICE
        - id: hotel-service
          uri: lb://HOTEL-SERVICE
          predicates:
            - Path=/api/hotel-service/**
          filters:
            - TokenRelay=
            - RewritePath=/api/hotel-service/(?<segment>.*), /${segment}
        # CUSTOMER SERVICE
        - id: customer-service
          uri: lb://CUSTOMER-SERVICE
          predicates:
            - Path=/api/customer-service/**
          filters:
            - TokenRelay=
            - RewritePath=/api/customer-service/(?<segment>.*), /${segment}

        - id: eureka-web-start
          uri: lb://DISCOVERY-SERVICE
          predicates:
            - Path=/eureka/web
          filters:
            - StripPrefix=2
        - id: netxjs
          uri: http://localhost:3000
          predicates:
            - Path=/**
      default-filters:
        - SaveSession
eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka
  instance:
    hostname: localhost
    prefer-ip-address: false

---

spring:
  config:
    activate:
      on-profile: docker
  security:
    oauth2:
      client:
        registration:
          api-client:
            client-name: Backoffice
            client-id: backoffice-bff
            client-secret: qhW4NC8pgPLdJDTd57sry5ON1fHK1d8i
            scope: profile, email, openid, roles
            provider: keycloak
        provider:
          keycloak:
            issuer-uri: ${JWT_ISSUER_URI}
  cloud:
    gateway:
      routes:
        # FLIGHT SERVICE
        - id: flight-service
          uri: lb://FLIGHT-SERVICE
          predicates:
            - Path=/api/flight-service/**
          filters:
            - TokenRelay=
            - RewritePath=/api/flight-service/(?<segment>.*), /${segment}
        # BOOKING SERVICE
        - id: booking-service
          uri: lb://BOOKING-SERVICE
          predicates:
            - Path=/api/booking-service/**
          filters:
            - TokenRelay=
            - RewritePath=/api/booking-service/(?<segment>.*), /${segment}
        # HOTEL SERVICE
        - id: hotel-service
          uri: lb://HOTEL-SERVICE
          predicates:
            - Path=/api/hotel-service/**
          filters:
            - TokenRelay=
            - RewritePath=/api/hotel-service/(?<segment>.*), /${segment}
        # CUSTOMER SERVICE
        - id: customer-service
          uri: lb://CUSTOMER-SERVICE
          predicates:
            - Path=/api/customer-service/**
          filters:
            - TokenRelay=
            - RewritePath=/api/customer-service/(?<segment>.*), /${segment}

        - id: eureka-web-start
          uri: lb://DISCOVERY-SERVICE
          predicates:
            - Path=/eureka/web
          filters:
            - StripPrefix=2
        - id: netxjs
          uri: http://localhost:3000
          predicates:
            - Path=/**
      default-filters:
        - SaveSession
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    consumer:
      group-id: backoffice-bff-group
eureka:
  client:
    serviceUrl:
      defaultZone: ${EUREKA_URI}
  instance:
    prefer-ip-address: true