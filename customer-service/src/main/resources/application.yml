server:
  port: 8084
  servlet:
    context-path: /customers

# OpenAPI Documentation Configuration
springdoc:
  api-docs:
    path: /api/docs
    enabled: true
  swagger-ui:
    path: /api/swagger-ui
    enabled: true
    operationsSorter: method
    tagsSorter: alpha
    try-it-out-enabled: true
    oauth:
      clientId: ${keycloak.client-id:bookingsmart-api}
      realm: ${keycloak.realm:bookingsmart}
      appName: ${spring.application.name}
  show-actuator: true
  group-configs:
    - group: 'public'
      display-name: 'Public API'
      paths-to-match: '/storefront/**'
    - group: 'admin'
      display-name: 'Admin API'
      paths-to-match: '/backoffice/admin/**'
    - group: 'partner'
      display-name: 'Partner API'
      paths-to-match: '/backoffice/partner/**'

# API Documentation Properties
api:
  info:
    title: Customer Service API
    description: Customer management and profile API for the BookingSmart platform
    version: '@project.version@'
    contact:
      name: BookingSmart Customer Team
      email: customer-team@bookingsmart.com
    oauth2:
      authorization-url: http://localhost:8080/realms/bookingsmart/protocol/openid-connect/auth
      token-url: http://localhost:8080/realms/bookingsmart/protocol/openid-connect/token
      scopes:
        admin: Administrative access to customer management
        customer: Customer access to profile operations
        partner: Partner access to customer integration endpoints

spring:
  profiles:
    active: local
  application:
    name: CUSTOMER-SERVICE
  threads:
    virtual:
      enabled: true
---

spring:
  config:
    activate:
      on-profile: local
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:9090/realms/BookingSmart
keycloak:
  auth-server-url: http://localhost:9090
  realm: BookingSmart
  resource: customer-management
  credentials:
    secret: ${KEYCLOAK_CLIENT_SECRET_CUSTOMER_MANAGEMENT}
eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka
  instance:
    hostname: localhost
    prefer-ip-address: false
---
spring:
  config:
    activate:
      on-profile: docker
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${JWT_ISSUER_URI}
keycloak:
    auth-server-url: ${KEYCLOAK_HOST:http://identity:9090}
    realm: BookingSmart
    resource: customer-management
    credentials:
        secret: ${KEYCLOAK_CLIENT_SECRET_CUSTOMER_MANAGEMENT}
eureka:
  client:
    serviceUrl:
      defaultZone: ${EUREKA_URI}
  instance:
    prefer-ip-address: true
