server:
  port: 8084
  servlet:
    context-path: /customers

spring:
  profiles:
    active: local
  application:
    name: CUSTOMER-SERVICE
  threads:
    virtual:
      enabled: true
---

spring:
  config:
    activate:
      on-profile: local
  datasource:
    url: jdbc:postgresql://localhost:5432/customer_db
    username: postgres
    password: p0stgr3s
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
  liquibase:
    enabled: true
    default-schema: public
    change-log: classpath:db/changelog/db.changelog-master.yaml
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:9090/realms/BookingSmart
keycloak:
  auth-server-url: http://localhost:9090
  realm: BookingSmart
  resource: customer-management
  credentials:
    secret: NKAr3rnjwm9jlakgKpelukZGFaHYqIWE
eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka
  instance:
    hostname: localhost
    prefer-ip-address: false
---
spring:
  config:
    activate:
      on-profile: docker
  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
  liquibase:
    enabled: true
    default-schema: public
    change-log: classpath:db/changelog/db.changelog-master.yaml
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${JWT_ISSUER_URI}
keycloak:
    auth-server-url: ${KEYCLOAK_HOST:http://identity:9090}
    realm: BookingSmart
    resource: customer-management
    credentials:
        secret: ${KEYCLOAK_CLIENT_SECRET_CUSTOMER_MANAGEMENT}
eureka:
  client:
    serviceUrl:
      defaultZone: ${EUREKA_URI}
  instance:
    prefer-ip-address: true
