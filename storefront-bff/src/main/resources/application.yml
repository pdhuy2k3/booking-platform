server:
  port: 8086

spring:
  profiles:
    active: local
  application:
    name: STOREFRONT-BFF

---
spring:
  config:
    activate:
      on-profile: local
  security:
    oauth2:
      client:
        registration:
          storefront-client:
            client-id: storefront-bff
            client-secret: ${KEYCLOAK_CLIENT_SECRET_STOREFRONT_BFF:wYUpnvBO9kXw9Aa7M1fU9DakJQ5XNIvx}
            scope: profile, email, openid, roles
            provider: keycloak
        provider:
          keycloak:
            issuer-uri: http://localhost:9090/realms/BookingSmart
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    consumer:
      group-id: storefront-bff-group

  cloud:
    gateway:
      routes:
        - id: api
          uri: http://api.bookingsmart.local
          predicates:
            - Path=/api/**
          filters:
            - RewritePath=/api/(?<segment>.*), /$\{segment}
            - TokenRelay=

        # Frontend fallback route - redirect to storefront domain
        - id: frontend-fallback
          uri: http://storefront:3000
          predicates:
            - Path=/**
          filters:
            - RedirectTo=302, http://storefront
      default-filters:
        - SaveSession

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka
  instance:
    hostname: localhost
    prefer-ip-address: false

---

spring:
  config:
    activate:
      on-profile: "docker"
  security:
    oauth2:
      client:
        registration:
          storefront-client:
            client-name: Storefront
            client-id: storefront-bff
            client-secret: ${KEYCLOAK_CLIENT_SECRET_STOREFRONT_BFF}
            scope: profile, email, openid, roles
            provider: keycloak
        provider:
          keycloak:
            issuer-uri: ${JWT_ISSUER_URI}
  cloud:
    gateway:
      default-filters:
        - SaveSession
      routes:
        - id: api
          uri: ${API_URL:https://api-bookingsmart.huypd.dev}
          predicates:
            - Path=/api/**
          filters:
            - DedupeResponseHeader=Origin Access-Control-Request-Method Access-Control-Request-Headers
            - TokenRelay=
            - StripPrefix=1
        - id: nextjs
          uri: http://storefront-fe:3000
          predicates:
            - Path=/**
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    consumer:
      group-id: storefront-bff-group

eureka:
  client:
    serviceUrl:
      defaultZone: ${EUREKA_URI}
  instance:
    prefer-ip-address: true

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always

logging:
  level:
    "[com.pdh.storefront]": DEBUG
    "[org.springframework.security]": DEBUG
