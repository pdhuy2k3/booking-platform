server:
  port: 8086

spring:
  profiles:
    active: local
  application:
    name: STOREFRONT-GATEWAY

  security:
    oauth2:
      client:
        registration:
          storefront-client:
            client-id: storefront-bff
            client-secret: ${KEYCLOAK_CLIENT_SECRET_STOREFRONT_BFF:wYUpnvBO9kXw9Aa7M1fU9DakJQ5XNIvx}
            scope: profile, email, openid, roles
            provider: keycloak
            authorization-grant-type: authorization_code
        provider:
          keycloak:
            issuer-uri: http://localhost:9090/realms/BookingSmart

---
spring:
  config:
    activate:
      on-profile: local

  cloud:
    gateway:
      routes:
        - id: hotel-service
          uri: http://localhost:8082
          predicates:
            - Path=/api/hotels/**
          filters:
            - StripPrefix=2
            - TokenRelay=

        - id: flight-service
          uri: http://localhost:8083
          predicates:
            - Path=/api/flights/**
          filters:
            - StripPrefix=2
            - TokenRelay=

        - id: booking-service
          uri: http://localhost:8084
          predicates:
            - Path=/api/bookings/**
          filters:
            - StripPrefix=2
            - TokenRelay=

        - id: customer-service
          uri: http://localhost:8085
          predicates:
            - Path=/api/customers/**
          filters:
            - StripPrefix=2
            - TokenRelay=

      default-filters:
        - TokenRelay=
        - SaveSession

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka
  instance:
    hostname: localhost
    prefer-ip-address: false

---
spring:
  config:
    activate:
      on-profile: docker

  security:
    oauth2:
      client:
        registration:
          storefront-client:
            client-name: Storefront
            client-id: storefront-bff
            client-secret: ${KEYCLOAK_CLIENT_SECRET_STOREFRONT_BFF}
            scope: profile, email, openid, roles
            provider: keycloak
            authorization-grant-type: authorization_code
        provider:
          keycloak:
            issuer-uri: ${JWT_ISSUER_URI}

  cloud:
    gateway:
      routes:
        - id: hotel-service
          uri: lb://HOTEL-SERVICE
          predicates:
            - Path=/api/hotels/**
          filters:
            - StripPrefix=2
            - TokenRelay=

        - id: flight-service
          uri: lb://FLIGHT-SERVICE
          predicates:
            - Path=/api/flights/**
          filters:
            - StripPrefix=2
            - TokenRelay=

        - id: booking-service
          uri: lb://BOOKING-SERVICE
          predicates:
            - Path=/api/bookings/**
          filters:
            - StripPrefix=2
            - TokenRelay=

        - id: customer-service
          uri: lb://CUSTOMER-SERVICE
          predicates:
            - Path=/api/customers/**
          filters:
            - StripPrefix=2
            - TokenRelay=

        - id: frontend-fallback
          uri: http://storefront-fe:3000
          predicates:
            - Path=/**

      default-filters:
        - TokenRelay=
        - SaveSession

eureka:
  client:
    serviceUrl:
      defaultZone: ${EUREKA_URI}
  instance:
    prefer-ip-address: true

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always

logging:
  level:
    "[com.pdh.storefront]": DEBUG
    "[org.springframework.cloud.gateway]": DEBUG
    "[org.springframework.security]": DEBUG