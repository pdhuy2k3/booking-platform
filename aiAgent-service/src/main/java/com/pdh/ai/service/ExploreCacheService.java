package com.pdh.ai.service;

import com.pdh.ai.agent.ExploreAgent;
import com.pdh.ai.config.CacheConfig;
import com.pdh.ai.model.dto.ExploreResponse;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.cache.annotation.Cacheable;
import org.springframework.cache.annotation.CacheEvict;
import org.springframework.stereotype.Service;

@Service
public class ExploreCacheService {

    private static final Logger logger = LoggerFactory.getLogger(ExploreCacheService.class);

    private final ExploreAgent exploreAgent;

    public ExploreCacheService(ExploreAgent exploreAgent) {
        this.exploreAgent = exploreAgent;
    }

    /**
     * Get general explore recommendations from cache or generate if not cached
     * This is the only cached method for default page load
     * Always returns recommendations for Vietnam
     */
    @Cacheable(value = CacheConfig.EXPLORE_CACHE, key = "'vietnam_default'")
    public ExploreResponse getDefaultExploreRecommendations() {
        String country = "Vi·ªát Nam";
        logger.info("üóÑÔ∏è [CACHE] Generating default explore recommendations for Vietnam");
        String query = "G·ª£i √Ω 4 ƒëi·ªÉm ƒë·∫øn du l·ªãch n·ªïi ti·∫øng v√† h·∫•p d·∫´n nh·∫•t t·∫°i " + country + 
                      ". Bao g·ªìm ƒëa d·∫°ng c√°c lo·∫°i: bi·ªÉn, th√†nh ph·ªë, thi√™n nhi√™n, vƒÉn h√≥a v·ªõi h√¨nh ·∫£nh ƒë·∫πp.";
        return exploreAgent.explore(query, country);
    }

    /**
     * Clear default explore cache
     */
    @CacheEvict(value = CacheConfig.EXPLORE_CACHE, allEntries = true)
    public void clearDefaultCache() {
        logger.info("üóëÔ∏è [CACHE] Clearing default explore cache");
    }

    /**
     * Clear default cache for Vietnam
     */
    @CacheEvict(value = CacheConfig.EXPLORE_CACHE, key = "'vietnam_default'")
    public void clearDefaultCache(String country) {
        logger.info("üóëÔ∏è [CACHE] Clearing default cache for Vietnam");
    }

    /**
     * Get seasonal explore recommendations from cache or generate if not cached
     * @param season The season (spring, summer, fall, winter)
     * @param country The country to get recommendations for
     */
    @Cacheable(value = CacheConfig.EXPLORE_CACHE, key = "#country + '_' + #season")
    public ExploreResponse getSeasonalExploreRecommendations(String season, String country) {
        logger.info("üóÑÔ∏è [CACHE] Generating seasonal explore recommendations for {} in {}", season, country);
        String query = String.format("G·ª£i √Ω 3 ƒëi·ªÉm ƒë·∫øn du l·ªãch ph√π h·ª£p v·ªõi m√πa %s t·∫°i %s. " +
                                    "Bao g·ªìm l√Ω do t·∫°i sao ph√π h·ª£p v·ªõi m√πa n√†y v√† h√¨nh ·∫£nh ƒë·∫πp.", season, country);
        return exploreAgent.explore(query, country);
    }

    /**
     * Clear seasonal cache for a specific season and country
     */
    @CacheEvict(value = CacheConfig.EXPLORE_CACHE, key = "#country + '_' + #season")
    public void clearSeasonalCache(String season, String country) {
        logger.info("üóëÔ∏è [CACHE] Clearing seasonal cache for {} in {}", season, country);
    }
}