server:
  port: 8081
logging:
  level:
    com.pdh.flight: DEBUG
    org.springframework.security: DEBUG
    org.springframework.oauth2: DEBUG
    org.hibernate.SQL: DEBUG
spring:
  profiles:
    active: local
  application:
    name: FLIGHT-SERVICE
  threads:
    virtual:
      enabled: true

---

spring:
  config:
    activate:
      on-profile: local
  datasource:
    url: jdbc:postgresql://localhost:5432/flight_db
    username: postgres
    password: p0stgr3s
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
  security:
    oauth2:
      resourceserver:
       jwt:
         issuer-uri: http://localhost:9090/realms/BookingSmart

  liquibase:
    enabled: true
    default-schema: public
    change-log: classpath:db/changelog/db.changelog-master.yaml
  
  # Kafka Configuration - Minimal, inherit từ BaseKafkaConfig
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: flight-service
eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka
  instance:
    hostname: localhost
    prefer-ip-address: false

---

spring:
  config:
    activate:
      on-profile: docker
  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${JWT_ISSUER_URI}

  liquibase:
    enabled: true
    default-schema: public
    change-log: classpath:db/changelog/db.changelog-master.yaml
  
  # Kafka Configuration - Minimal, inherit từ BaseKafkaConfig
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    consumer:
      group-id: flight-service
eureka:
  client:
    serviceUrl:
      defaultZone: ${EUREKA_URI}
  instance:
    prefer-ip-address: true

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always


